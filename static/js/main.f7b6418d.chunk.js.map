{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","onSubmit","state","onClear","onCloseFrom","status","id","this","task","nextProps","className","onClick","type","onChange","required","Component","Search","onSearch","keyword","placeholder","Sort","onclick","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","role","Control","TaskItem","onUpdateStatus","onDeleteData","onEditData","index","onDoubleClick","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","key","App","onToggleFrom","isShowForm","taskEditing","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","onShowFrom","parseInt","getItem","parse","Math","floor","random","toString","substring","s4","filter","toLowerCase","indexOf","sort","a","b","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7b6418d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      status: false\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    if (this.props.task) {\r\n      this.setState({\r\n        id: this.props.task.id,\r\n        name: this.props.task.name,\r\n        status: this.props.task.status\r\n      });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps && nextProps.task) {\r\n      this.setState({\r\n        id: nextProps.task.id,\r\n        name: nextProps.task.name,\r\n        status: nextProps.task.status\r\n      });\r\n    }else if (!nextProps.task) {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        status: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    var target = e.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if (name === \"status\") {\r\n      value = target.value === \"true\" ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    //Canle & Close Form\r\n    this.onClear();\r\n    this.onCloseFrom();\r\n  };\r\n\r\n  onCloseFrom = () => {\r\n    this.props.onCloseFrom();\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: false\r\n    });\r\n    this.onCloseFrom();\r\n  };\r\n  render() {\r\n    var { id } = this.state;\r\n    return (\r\n      <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">\r\n            {id !== \"\" ? \"Cập Nhật Công Việc\" : \"Thêm Công Việc\"}\r\n            <span\r\n              className=\"fas fa-times-circle text-right\"\r\n              onClick={this.onCloseFrom}\r\n            ></span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên: </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                value={this.state.name}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Trạng Thái: </label>\r\n\r\n              <select\r\n                name=\"status\"\r\n                className=\"form-control\"\r\n                onChange={this.handleChange}\r\n                value={this.state.status}\r\n              >\r\n                <option value={false}>Ẩn</option>\r\n                <option value={true}>Kích Hoạt</option>\r\n              </select>\r\n              <br />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                <span className=\"fas fa-plus\"></span> Lưu Lại\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.onClear}\r\n              >\r\n                <span className=\"fas fa-times\"></span> Hủy Bỏ\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword: '',\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    var target = e.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search\"\r\n            name = 'keyword'\r\n            value={this.state.keyword}\r\n            onChange={this.onChange}\r\n          />\r\n          <span className=\"input-group-btn\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.onSearch}\r\n            >\r\n              <span className=\"fas fa-search\"></span> Tìm\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Sort extends Component {\r\n   \r\n\r\n\r\n  onclick = (sortBy, sortValue) =>{\r\n    this.props.onSort(sortBy, sortValue);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenu1\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"true\"\r\n          >\r\n            Sắp Xếp <span className=\"far fa-plus-square\"></span>\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li onClick={() => this.onclick('name', 1)}>\r\n              <a href=\"# \" role=\"button\" className={(this.props.sortBy === 'name' && this.props.sortValue === 1) ? 'sort-selected' : ''}>\r\n                <span className=\"fas fa-sort-alpha-up\"> Tên A-Z</span>\r\n              </a>\r\n            </li  >\r\n            <li onClick={() => this.onclick('name', -1)}>\r\n            <a href=\"# \" role=\"button\" className={(this.props.sortBy === 'name' && this.props.sortValue === -1) ? 'sort-selected' : ''}>\r\n                <span className=\"fas fa-sort-alpha-down-alt\"> Tên Z-A</span>\r\n              </a>\r\n            </li>\r\n            <li role=\"separator\" className=\"divider\"></li>\r\n            <li onClick={() => this.onclick('status', 1)}>\r\n            <a href=\"# \" role=\"button\" className={(this.props.sortBy === 'status' && this.props.sortValue === 1) ? 'sort-selected' : ''} >Trạng Thái kích hoạt</a>\r\n            </li>\r\n            <li onClick={() => this.onclick('status', -1)}>\r\n            <a href=\"# \" role=\"button\" className={(this.props.sortBy === 'status' && this.props.sortValue === -1) ? 'sort-selected' : ''}>Trạng Thái Ẩn</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\n\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        <Search onSearch={this.props.onSearch} />\r\n        <Sort onSort={this.props.onSort} sortBy={this.props.sortBy} sortValue={this.props.sortValue} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TaskItem extends Component {\r\n  onUpdateStatus = () => {\r\n    this.props.onUpdateStatus(this.props.task.id);\r\n  };\r\n\r\n  onDeleteData = () => {\r\n    this.props.onDeleteData(this.props.task.id);\r\n  };\r\n\r\n  onEditData = () =>{\r\n    this.props.onEditData(this.props.task.id);\r\n  }\r\n\r\n  render() {\r\n    var { task, index } = this.props;\r\n\r\n    return (\r\n      <tr>\r\n        <td>{index + 1}</td>\r\n        <td className=\"text-center\">{task.name}</td>\r\n        <td className=\"text-center\">\r\n          <span\r\n            className={\r\n              task.status === true\r\n                ? \"label label-danger\"\r\n                : \"label label-success\"\r\n            }\r\n            onDoubleClick={this.onUpdateStatus}\r\n          >\r\n            {task.status === true ? \"Kich Hoat\" : \"An\"}\r\n          </span>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={this.onEditData} >\r\n            <span className=\"fas fa-pencil-alt\"></span> Sửa\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDeleteData}\r\n          >\r\n            <span className=\"fas fa-trash-alt\"></span> Xóa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName : \"\",\r\n      filterStatus : -1 // all -1; active: 1; deactive: 0\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    var target = e.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.props.onFilter(\r\n      name === \"filterName\" ? value : this.state.filterName,\r\n      name === \"filterStatus\" ? value : this.state.filterStatus\r\n    );\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var { tasks } = this.props;\r\n    var { filterName, filterStatus } = this.state;\r\n    var elmTasks = tasks.map((task, index) => {\r\n      return (\r\n        <TaskItem\r\n          key={task.id}\r\n          index={index}\r\n          task={task}\r\n          onUpdateStatus={this.props.onUpdateStatus}\r\n          onDeleteData={this.props.onDeleteData}\r\n          onEditData={this.props.onEditData}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <table className=\"table table-bordered table-hover mt-15\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">STT</th>\r\n            <th className=\"text-center\">Tên</th>\r\n            <th className=\"text-center\">Trạng Thái</th>\r\n            <th className=\"text-center\">Hành Động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                name=\"filterName\"\r\n                className=\"form-control\"\r\n                value={filterName}\r\n                onChange={this.onChange}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"filterStatus\"\r\n                value={filterStatus}\r\n                onChange={this.onChange}\r\n              >\r\n                <option value={-1}>Tất cả</option>\r\n                <option value={0}>Ẩn</option>\r\n                <option value={1}>Kích hoạt</option>\r\n              </select>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          {elmTasks}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\nimport {filter, findIndex} from \"lodash\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [], //id:unique, name, status\n      isShowForm: false,\n      taskEditing: null,\n      filterName: \"\",\n      filterStatus: \"-1\",\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1\n    };\n  }\n  // load one save localStorate\n  UNSAFE_componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  // creat random id\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4()\n    );\n  }\n\n  onToggleFrom = () => {\n    if (this.state.isShowForm && this.state.taskEditing !== null) {\n      this.setState({\n        isShowForm: true,\n        taskEditing: null\n      });\n    } else {\n      this.setState({\n        isShowForm: !this.state.isShowForm,\n        taskEditing: null\n      });\n    }\n  };\n\n  onCloseFrom = () => {\n    this.setState({\n      isShowForm: false\n    });\n  };\n\n  onSubmit = data => {\n    var { tasks } = this.state;\n    if (data.id === \"\") {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      //editing\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  onUpdateStatus = id => {\n    var { tasks } = this.state;\n    // var index = this.findIndex(id);\n    var index = findIndex(tasks, task => {\n      return task.id === id;\n    });\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n  findIndex = id => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  onDeleteData = id => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.onCloseFrom();\n  };\n\n  onShowFrom = () => {\n    this.setState({\n      isShowForm: true\n    });\n  };\n  onEditData = id => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing: taskEditing\n    });\n    this.onShowFrom();\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filterName: filterName,\n      filterStatus: filterStatus\n    });\n  };\n\n  onSearch = keyword => {\n    this.setState({\n      keyword: keyword\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue\n    });\n  };\n\n  render() {\n    var {\n      tasks,\n      isShowForm,\n      taskEditing,\n      filterName,\n      filterStatus,\n      keyword,\n      sortBy,\n      sortValue\n    } = this.state;\n      tasks = filter(tasks, (task) => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n\n    if (filterName) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterName.toLowerCase()) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterStatus === '-1' || filterStatus === -1) {\n        return task;\n      } else {\n        return task.status === (filterStatus === 1 ? true : false);\n      }\n    });\n    \n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sortBy === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      });\n    }\n\n    var elmTaskForm = isShowForm ? (\n      <TaskForm\n        onCloseFrom={this.onCloseFrom}\n        onSubmit={this.onSubmit}\n        task={taskEditing}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n        </div>\n        <div className=\"row\">\n          <div\n            className={isShowForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}\n          >\n            {elmTaskForm}\n          </div>\n          <div\n            className={\n              isShowForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToggleFrom}\n            >\n              <span className=\"fas fa-plus\"></span> Thêm Công Việc\n            </button>\n            &nbsp;\n            <Control\n              onSearch={this.onSearch}\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n            <TaskList\n              tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDeleteData={this.onDeleteData}\n              onEditData={this.onEditData}\n              onFilter={this.onFilter}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}